"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9028],{5788:(e,t,r)=>{r.d(t,{Iu:()=>u,yg:()=>m});var n=r(1504);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},y="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),y=s(r),f=a,m=y["".concat(l,".").concat(f)]||y[f]||p[f]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[y]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2843:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>c,metadata:()=>s,toc:()=>y});r(1504);var n=r(5788);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const c={id:"arrayIntro",title:"Introductio to Array"},l=void 0,s={unversionedId:"array/arrayIntro",id:"array/arrayIntro",title:"Introductio to Array",description:"An array is a basic data structure to store a collection of elements sequentially. But elements can be accessed randomly since each element in the array can be identified by an array index.",source:"@site/docs/array/arrayIntro.md",sourceDirName:"array",slug:"/array/arrayIntro",permalink:"/docs/array/arrayIntro",draft:!1,editUrl:"https://github.com/PrepVerse/PrepVerse/tree/master/documentation/docs/array/arrayIntro.md",tags:[],version:"current",lastUpdatedBy:"Akash Singh",lastUpdatedAt:1709225424,formattedLastUpdatedAt:"Feb 29, 2024",frontMatter:{id:"arrayIntro",title:"Introductio to Array"}},u={},y=[],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.yg)("div",t)},f=p("Tabs"),m=p("TabItem"),d={toc:y},b="wrapper";function g(e){var{components:t}=e,r=i(e,["components"]);return(0,n.yg)(b,o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},d,r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"An array is a basic data structure to store a collection of elements sequentially. But elements can be accessed randomly since each element in the array can be identified by an array index."),(0,n.yg)("p",null,"An array can have one or more dimensions. Here we start with the one-dimensional array, which is also called the linear array. Here is an example:"),(0,n.yg)("p",null,(0,n.yg)("img",{parentName:"p",src:"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/20/screen-shot-2018-03-20-at-191856.png",alt:null})),(0,n.yg)("p",null,"In the above example, there are 6 elements in array A. That is to say, the length of A is 6. We can use A","[0]"," to represent the first element in the array. Therefore, A","[0]"," = 6. Similarly, A","[1]"," = 3, A","[2]"," = 8 and so on."),(0,n.yg)("p",null,"Operations in Array\nLet's take a look at the usage of the array."),(0,n.yg)(f,{mdxType:"Tabs"},(0,n.yg)(m,{value:"C++",label:"CPP",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp",metastring:"title=Array",title:"Array"},'#include <iostream>\n\nint main() {\n    // 1. Initialize\n    int a0[5];\n    int a1[5] = {1, 2, 3};  // other element will be set as the default value\n    // 2. Get Length\n    int size = sizeof(a1) / sizeof(*a1);\n    cout << "The size of a1 is: " << size << endl;\n    // 3. Access Element\n    cout << "The first element is: " << a1[0] << endl;\n    // 4. Iterate all Elements\n    cout << "[Version 1] The contents of a1 are:";\n    for (int i = 0; i < size; ++i) {\n        cout << " " << a1[i];\n    }\n    cout << endl;\n    cout << "[Version 2] The contents of a1 are:";\n    for (int& item: a1) {\n        cout << " " << item;\n    }\n    cout << endl;\n    // 5. Modify Element\n    a1[0] = 4;\n    // 6. Sort\n    sort(a1, a1 + size);\n}\n')))))}g.isMDXComponent=!0}}]);