"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4808],{5788:(e,t,n)=>{n.d(t,{Iu:()=>u,yg:()=>d});var r=n(1504);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(n),g=a,d=c["".concat(l,".").concat(g)]||c[g]||y[g]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>p,metadata:()=>s,toc:()=>c});n(1504);var r=n(5788);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const p={id:"print",title:"print() in Python"},l=void 0,s={unversionedId:"python-foundation/print",id:"python-foundation/print",title:"print() in Python",description:"The print() function in Python is used to output messages to the screen or any other standard output device.",source:"@site/docs/python-foundation/print.md",sourceDirName:"python-foundation",slug:"/python-foundation/print",permalink:"/docs/python-foundation/print",draft:!1,editUrl:"https://github.com/PrepVerse/PrepVerse/tree/master/documentation/docs/python-foundation/print.md",tags:[],version:"current",lastUpdatedBy:"Akash Singh",lastUpdatedAt:1723046185,formattedLastUpdatedAt:"Aug 7, 2024",frontMatter:{id:"print",title:"print() in Python"},sidebar:"someSidebar",previous:{title:"Python Basics",permalink:"/docs/python-foundation/python-basics"},next:{title:"Comments in Python",permalink:"/docs/python-foundation/comments"}},u={},c=[{value:"Syntax:",id:"syntax",level:3},{value:"Parameters:",id:"parameters",level:3},{value:"Return Type:",id:"return-type",level:3},{value:"Key Points:",id:"key-points",level:2},{value:"Examples:",id:"examples",level:2},{value:"Basic Usage:",id:"basic-usage",level:3},{value:"Using <code>\n</code> for New Lines:",id:"using-n-for-new-lines",level:3},{value:"Using <code>end</code> to Control End Character:",id:"using-end-to-control-end-character",level:3},{value:"Using <code>sep</code> to Control Separator:",id:"using-sep-to-control-separator",level:3},{value:"Conclusion",id:"conclusion",level:2}],y={toc:c},g="wrapper";function d(e){var{components:t}=e,n=o(e,["components"]);return(0,r.yg)(g,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},y,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"print()")," function in Python is used to output messages to the screen or any other standard output device."),(0,r.yg)("h3",{id:"syntax"},"Syntax:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=print.py",title:"print.py"},"print(value(s), sep=' ', end='\\n', file=file, flush=flush)\n")),(0,r.yg)("h3",{id:"parameters"},"Parameters:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"value(s)"),": Any value(s) you wish to print. These values will be converted to a string before being printed."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"sep"),": (Optional) Specifies the separator between multiple values. Default is a space ",(0,r.yg)("inlineCode",{parentName:"li"},"' '"),"."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"end"),": (Optional) Specifies what to print at the end. Default is a newline ",(0,r.yg)("inlineCode",{parentName:"li"},"'\\n'"),"."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"file"),": (Optional) An object with a write method. Default is ",(0,r.yg)("inlineCode",{parentName:"li"},"sys.stdout"),"."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"flush"),": (Optional) A boolean indicating if the output should be flushed immediately (",(0,r.yg)("inlineCode",{parentName:"li"},"True"),") or buffered (",(0,r.yg)("inlineCode",{parentName:"li"},"False"),"). Default is ",(0,r.yg)("inlineCode",{parentName:"li"},"False"),".")),(0,r.yg)("h3",{id:"return-type"},"Return Type:"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"print()")," function does not return a value; it outputs the specified message to the screen or other standard output."),(0,r.yg)("h2",{id:"key-points"},"Key Points:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"No Arguments Required"),": The ",(0,r.yg)("inlineCode",{parentName:"li"},"print()")," function can be called without any arguments, but it requires empty parentheses to indicate a function call."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"String Literals"),": Used for formatting the output.",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"\\n"),": Adds a new line."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},'""'),": Prints an empty line.")))),(0,r.yg)("h2",{id:"examples"},"Examples:"),(0,r.yg)("h3",{id:"basic-usage"},"Basic Usage:"),(0,r.yg)("admonition",{type:"sourcecode"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=print.py",title:"print.py"},'print("Welcome to PrepVerse")\n')),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-cpp",metastring:"title=Output",title:"Output"},"Welcome to PrepVerse\n"))),(0,r.yg)("h3",{id:"using-n-for-new-lines"},"Using ",(0,r.yg)("inlineCode",{parentName:"h3"},"\\n")," for New Lines:"),(0,r.yg)("admonition",{type:"sourcecode"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=print.py",title:"print.py"},'print("PrepVerse \\nLearn Python Easily")\n')),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-cpp",metastring:"title=Output",title:"Output"},"PrepVerse \nLearn Python Easily\n"))),(0,r.yg)("h3",{id:"using-end-to-control-end-character"},"Using ",(0,r.yg)("inlineCode",{parentName:"h3"},"end")," to Control End Character:"),(0,r.yg)("p",null,"By default, ",(0,r.yg)("inlineCode",{parentName:"p"},"print()")," ends with a newline character. You can change this using the ",(0,r.yg)("inlineCode",{parentName:"p"},"end")," parameter."),(0,r.yg)("admonition",{type:"sourcecode"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=print.py",title:"print.py"},'# Default behavior\nprint("Welcome to PrepVerse")\nprint("Learn Python")\n\n# Custom end character\nprint("Welcome to PrepVerse", end=" ** ")\nprint("Learn Python")\n')),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-cpp",metastring:"title=Output",title:"Output"},"Welcome to PrepVerse\nLearn Python\nWelcome to PrepVerse ** Learn Python\n"))),(0,r.yg)("h3",{id:"using-sep-to-control-separator"},"Using ",(0,r.yg)("inlineCode",{parentName:"h3"},"sep")," to Control Separator:"),(0,r.yg)("p",null,"When printing multiple values, the default separator is a space. You can change this using the ",(0,r.yg)("inlineCode",{parentName:"p"},"sep")," parameter."),(0,r.yg)("admonition",{type:"sourcecode"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=print.py",title:"print.py"},'print("Python", "is", "fun", sep="-")\n')),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-cpp",metastring:"title=Output",title:"Output"},"Python-is-fun\n"))),(0,r.yg)("h2",{id:"conclusion"},"Conclusion"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"print()")," function is versatile and allows various customizations for output formatting. Understanding its parameters and how to use them effectively can significantly enhance the way you display information in Python."))}d.isMDXComponent=!0}}]);