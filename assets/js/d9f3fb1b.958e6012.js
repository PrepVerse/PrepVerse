"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1152],{5788:(e,t,n)=>{n.d(t,{Iu:()=>m,yg:()=>g});var r=n(1504);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(n),y=o,g=p["".concat(c,".").concat(y)]||p[y]||u[y]||i;return n?r.createElement(g,a(a({ref:t},m),{},{components:n})):r.createElement(g,a({ref:t},m))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9888:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>p});n(1504);var r=n(5788);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={id:"comments",title:"Comments in Python"},c=void 0,s={unversionedId:"python-foundation/comments",id:"python-foundation/comments",title:"Comments in Python",description:"In Python, comments play a crucial role in making your code understandable and maintainable. Let's explore how comments can be utilized effectively in your Python scripts:",source:"@site/docs/python-foundation/comments.md",sourceDirName:"python-foundation",slug:"/python-foundation/comments",permalink:"/docs/python-foundation/comments",draft:!1,editUrl:"https://github.com/PrepVerse/PrepVerse/tree/master/documentation/docs/python-foundation/comments.md",tags:[],version:"current",lastUpdatedBy:"Akash Singh",lastUpdatedAt:1723046185,formattedLastUpdatedAt:"Aug 7, 2024",frontMatter:{id:"comments",title:"Comments in Python"},sidebar:"someSidebar",previous:{title:"print() in Python",permalink:"/docs/python-foundation/print"}},m={},p=[{value:"Creating Comments:",id:"creating-comments",level:3},{value:"Multi-Line Comments:",id:"multi-line-comments",level:3}],u={toc:p},y="wrapper";function g(e){var{components:t}=e,n=a(e,["components"]);return(0,r.yg)(y,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"In Python, comments play a crucial role in making your code understandable and maintainable. Let's explore how comments can be utilized effectively in your Python scripts:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Explanation and Clarity"),":"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Comments are used to explain Python code, making it easier for others (and your future self!) to understand the purpose and functionality of different parts of the code."),(0,r.yg)("li",{parentName:"ul"},"They enhance readability by providing context and explanations for complex algorithms, functions, or logic."))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Readability Improvement"),":"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Comments help in making the code more readable by breaking down complex sections into understandable components."),(0,r.yg)("li",{parentName:"ul"},"They act as signposts, guiding readers through the logic and structure of the code."))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Execution Control"),":"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Comments can temporarily disable or prevent execution of specific lines or blocks of code, which is useful for debugging and testing purposes."),(0,r.yg)("li",{parentName:"ul"},"By commenting out certain sections, you can isolate problematic code or focus on specific areas during testing without altering the rest of the program.")))),(0,r.yg)("h3",{id:"creating-comments"},"Creating Comments:"),(0,r.yg)("p",null,"Comments in Python start with the '#' symbol, indicating that anything following it on the same line is a comment and will be ignored by the Python interpreter."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=single_Line.py",title:"single_Line.py"},'# This is a comment in Python.\nprint("Hello, World!")\n')),(0,r.yg)("h3",{id:"multi-line-comments"},"Multi-Line Comments:"),(0,r.yg)("p",null,"While Python does not have a built-in syntax for multi-line comments, there are alternative methods to achieve the same effect:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Using '#' for Each Line"),":",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Insert '#' at the beginning of each line to create a multi-line comment.")))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=multi_Line.py",title:"multi_Line.py"},'# This way we can\n# Write comments in \n# Multiple lines. \nprint("Hello, World!")\n')),(0,r.yg)("ol",{start:2},(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Using Multiline String"),":",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Although not intended for comments, you can utilize triple quotes (\"\"\" or ''') to create a multiline string and place your comment inside it.")))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=multi_Line.py",title:"multi_Line.py"},'"""\nAnother way to write\ncomments in more than one\nLine.\n"""\nprint("Hello, World!")\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Since Python ignores string literals that are not assigned to a variable, this method effectively serves as a way to add multi-line comments to your code.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"We can achieve multi-line comments by using single triple quotes (",(0,r.yg)("inlineCode",{parentName:"li"},"'''"),") or double triple quotes (",(0,r.yg)("inlineCode",{parentName:"li"},'"""'),"), both serving the purpose of creating a multiline string to store comments.")),(0,r.yg)("p",null,"With a clear understanding of Python comments and their importance, you can now write more readable, understandable, and well-documented code!"))}g.isMDXComponent=!0}}]);